// Base class
//
// Easily usable on <ul>, <ol>, or <div>.

.list-group {
  // scss-docs-start list-group-css-vars
  --#{BDTprefix}list-group-color: #{BDTlist-group-color};
  --#{BDTprefix}list-group-bg: #{BDTlist-group-bg};
  --#{BDTprefix}list-group-border-color: #{BDTlist-group-border-color};
  --#{BDTprefix}list-group-border-width: #{BDTlist-group-border-width};
  --#{BDTprefix}list-group-border-radius: #{BDTlist-group-border-radius};
  --#{BDTprefix}list-group-item-padding-x: #{BDTlist-group-item-padding-x};
  --#{BDTprefix}list-group-item-padding-y: #{BDTlist-group-item-padding-y};
  --#{BDTprefix}list-group-action-color: #{BDTlist-group-action-color};
  --#{BDTprefix}list-group-action-hover-color: #{BDTlist-group-action-hover-color};
  --#{BDTprefix}list-group-action-hover-bg: #{BDTlist-group-hover-bg};
  --#{BDTprefix}list-group-action-active-color: #{BDTlist-group-action-active-color};
  --#{BDTprefix}list-group-action-active-bg: #{BDTlist-group-action-active-bg};
  --#{BDTprefix}list-group-disabled-color: #{BDTlist-group-disabled-color};
  --#{BDTprefix}list-group-disabled-bg: #{BDTlist-group-disabled-bg};
  --#{BDTprefix}list-group-active-color: #{BDTlist-group-active-color};
  --#{BDTprefix}list-group-active-bg: #{BDTlist-group-active-bg};
  --#{BDTprefix}list-group-active-border-color: #{BDTlist-group-active-border-color};
  // scss-docs-end list-group-css-vars

  display: flex;
  flex-direction: column;

  // No need to set list-style: none; since .list-group-item is block level
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
  @include border-radius(var(--#{BDTprefix}list-group-border-radius));
}

.list-group-numbered {
  list-style-type: none;
  counter-reset: section;

  > .list-group-item::before {
    // Increments only this instance of the section counter
    content: counters(section, ".") ". ";
    counter-increment: section;
  }
}

// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-group-item-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  color: var(--#{BDTprefix}list-group-action-color);
  text-align: inherit; // For `<button>`s (anchors inherit)

  // Hover state
  &:hover,
  &:focus {
    z-index: 1; // Place hover/focus items above their siblings for proper border styling
    color: var(--#{BDTprefix}list-group-action-hover-color);
    text-decoration: none;
    background-color: var(--#{BDTprefix}list-group-action-hover-bg);
  }

  &:active {
    color: var(--#{BDTprefix}list-group-action-active-color);
    background-color: var(--#{BDTprefix}list-group-action-active-bg);
  }
}

// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.

.list-group-item {
  position: relative;
  display: block;
  padding: var(--#{BDTprefix}list-group-item-padding-y) var(--#{BDTprefix}list-group-item-padding-x);
  color: var(--#{BDTprefix}list-group-color);
  text-decoration: if(BDTlink-decoration == none, null, none);
  background-color: var(--#{BDTprefix}list-group-bg);
  border: var(--#{BDTprefix}list-group-border-width) solid var(--#{BDTprefix}list-group-border-color);

  &:first-child {
    @include border-top-radius(inherit);
  }

  &:last-child {
    @include border-bottom-radius(inherit);
  }

  &.disabled,
  &:disabled {
    color: var(--#{BDTprefix}list-group-disabled-color);
    pointer-events: none;
    background-color: var(--#{BDTprefix}list-group-disabled-bg);
  }

  // Include both here for `<a>`s and `<button>`s
  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: var(--#{BDTprefix}list-group-active-color);
    background-color: var(--#{BDTprefix}list-group-active-bg);
    border-color: var(--#{BDTprefix}list-group-active-border-color);
  }

  & + & {
    border-top-width: 0;

    &.active {
      margin-top: calc(var(--#{BDTprefix}list-group-border-width) * -1); // stylelint-disable-line function-disallowed-list
      border-top-width: var(--#{BDTprefix}list-group-border-width);
    }
  }
}

// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.

@each BDTbreakpoint in map-keys(BDTgrid-breakpoints) {
  @include media-breakpoint-up(BDTbreakpoint) {
    BDTinfix: breakpoint-infix(BDTbreakpoint, BDTgrid-breakpoints);

    .list-group-horizontal#{BDTinfix} {
      flex-direction: row;

      > .list-group-item {
        &:first-child {
          @include border-bottom-start-radius(var(--#{BDTprefix}list-group-border-radius));
          @include border-top-end-radius(0);
        }

        &:last-child {
          @include border-top-end-radius(var(--#{BDTprefix}list-group-border-radius));
          @include border-bottom-start-radius(0);
        }

        &.active {
          margin-top: 0;
        }

        + .list-group-item {
          border-top-width: var(--#{BDTprefix}list-group-border-width);
          border-left-width: 0;

          &.active {
            margin-left: calc(var(--#{BDTprefix}list-group-border-width) * -1); // stylelint-disable-line function-disallowed-list
            border-left-width: var(--#{BDTprefix}list-group-border-width);
          }
        }
      }
    }
  }
}


// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).

.list-group-flush {
  @include border-radius(0);

  > .list-group-item {
    border-width: 0 0 var(--#{BDTprefix}list-group-border-width);

    &:last-child {
      border-bottom-width: 0;
    }
  }
}


// scss-docs-start list-group-modifiers
// List group contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.

@each BDTstate, BDTvalue in BDTtheme-colors {
  BDTlist-group-variant-bg: shift-color(BDTvalue, BDTlist-group-item-bg-scale);
  BDTlist-group-variant-color: shift-color(BDTvalue, BDTlist-group-item-color-scale);
  @if (contrast-ratio(BDTlist-group-variant-bg, BDTlist-group-variant-color) < BDTmin-contrast-ratio) {
    BDTlist-group-variant-color: mix(BDTvalue, color-contrast(BDTlist-group-variant-bg), abs(BDTlist-group-item-color-scale));
  }

  @include list-group-item-variant(BDTstate, BDTlist-group-variant-bg, BDTlist-group-variant-color);
}
// scss-docs-end list-group-modifiers
